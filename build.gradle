buildscript {
    repositories {
        maven {
            url = 'https://files.minecraftforge.net/maven'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
def capitalizedModId = modDisplayName.replace(' ', '')
def modId = capitalizedModId.toLowerCase()
def forgeVersion = "${forgeMajor}.${forgeMinor}.${forgePatch}"
def mcNextVersion = "1." + ((mcVersion.split("\\.")[1] as int) + 1)
def homepageURL = "https://www.curseforge.com/minecraft/mc-mods/${modDisplayName.replace(' ', '-').toLowerCase()}"
def issuesURL = "${homepageURL}/issues"
def updateURL = "https://raw.githubusercontent.com/mrp-v2/${capitalizedModId}/master/update.json"
def dglNextAPI = dglAPI.split("\\.")[0] + "." + ((dglAPI.split("\\.")[1] as int) + 1)
version = "${mcVersion}-${modMajorMod}.${modMajorAPI}.${modMinor}.${modPatch}"
archivesBaseName = modId
group = "${author}.${archivesBaseName}"

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' +
        System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

sourceSets {
    main {
        resources {
            srcDirs 'src/generated/resources'
        }
    }
}

minecraft {
    mappings channel: mappingsChannel, version: mappingsVersion
    accessTransformer = file 'src/main/resources/META-INF/accesstransformer.cfg'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                morewires {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                morewires {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', modId, '--all', '--output', file('src/generated/resources/'), '--existing',
                    sourceSets.main.output.resourcesDir
            mods {
                morewires {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenLocal()
}

dependencies {
    minecraft "net.minecraftforge:forge:${mcVersion}-${forgeVersion}"
    compile fg.deobf("mrp_v2.mrp_v2datagenlibrary:mrp_v2DataGenLibrary:${mcVersion}-${dglAPI}.${dglPatch}")
}

jar {
    manifest {
        attributes(["Specification-Title"     : archivesBaseName,
                    "Specification-Vendor"    : author,
                    "Specification-Version"   : "1", // We are version 1 of ourselves
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : "${version}",
                    "Implementation-Vendor"   : author,
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")])
    }
}

jar.finalizedBy('reobfJar')

processResources {
    inputs.property 'version', project.version
    inputs.property 'modId', modId
    inputs.property 'forgeMajor', forgeMajor
    inputs.property 'mcVersion', mcVersion
    inputs.property 'mcNextVersion', mcNextVersion
    inputs.property 'homepageURL', homepageURL
    inputs.property 'modDisplayName', modDisplayName
    inputs.property 'capitalizedModId', capitalizedModId
    inputs.property 'modDescription', modDescription
    inputs.property 'author', author
    inputs.property 'updateURL', updateURL
    inputs.property 'issuesURL', issuesURL
    inputs.property 'dglAPI', dglAPI
    inputs.property 'dglNextAPI', dglNextAPI
    from(sourceSets.main.resources.srcDirs) {
        include '**/*'
        exclude '**/*.png'
        expand 'version': project.version, 'modId': modId, 'forgeMajor': forgeMajor, 'mcVersion': mcVersion,
                'mcNextVersion': mcNextVersion, 'homepageURL': homepageURL, 'modDisplayName': modDisplayName,
                'capitalizedModId': capitalizedModId, 'modDescription': modDescription, 'author': author,
                'updateURL': updateURL, 'issuesURL': issuesURL, 'dglAPI': dglAPI, 'dglNextAPI': dglNextAPI
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*'
    }
}
